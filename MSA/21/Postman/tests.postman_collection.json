{
	"info": {
		"_postman_id": "2d1abf46-b657-4164-899a-01c4daaef64b",
		"name": "tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36607989"
	},
	"item": [
		{
			"name": "Registration user #1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Registration user #1\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(\"request: \" + pm.request.data);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var CryptoJS = require(\"crypto-js\");\r",
							"var sha256Hash =  CryptoJS.SHA256('{{$randomPassword}}').toString();\r",
							"\r",
							"pm.collectionVariables.set(\"user1\", pm.variables.replaceIn('{{$randomFirstName}}'))\r",
							"pm.collectionVariables.set(\"pwd1\", pm.variables.replaceIn(sha256Hash))\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Host",
						"value": "{{baseUrl}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"user\": \"{{user1}}\",\r\n    \"pwd\": \"{{pwd1}}\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/register",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read profile user #1 without auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Read profile user #1 without auth\", function () {\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Host",
						"value": "{{baseUrl}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/user/{{user1}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"{{user1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user #1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login user #1\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set(\"token1\", jsonData.token);\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Host",
						"value": "{{baseUrl}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"user\": \"{{user1}}\",\r\n    \"pwd\": \"{{pwd1}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user #1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update user #1\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(\"request: \" + request.data);\r",
							"console.log(\"response:\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"newFullName\", pm.variables.replaceIn('{{$randomFullName}}'))"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Host",
						"value": "{{baseUrl}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token1}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"{{newFullName}}\",\r\n    \"lastName\": \"Cooper\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/user/{{user1}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"{{user1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read profile user #1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"/*\r",
							"pm.test(\"Read profile user #1\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(jsonData.fullName).to.eql(pm.collectionVariables.get(\"newFullName\"));\r",
							"    pm.expect(jsonData.citizenship).to.eql(pm.collectionVariables.get(\"newCitizenship\"));\r",
							"    pm.expect(jsonData.age).to.eql(pm.collectionVariables.get(\"newAge\"));\r",
							"});\r",
							"*/"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Host",
						"value": "{{baseUrl}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token1}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/user/{{user1}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"{{user1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Registration user #2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Registration user #1\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(\"request: \" + pm.request.data);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var CryptoJS = require(\"crypto-js\");\r",
							"var sha256Hash =  CryptoJS.SHA256('{{$randomPassword}}').toString();\r",
							"\r",
							"pm.collectionVariables.set(\"user2\", pm.variables.replaceIn('{{$randomFirstName}}'))\r",
							"pm.collectionVariables.set(\"pwd2\", pm.variables.replaceIn(sha256Hash))\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Host",
						"value": "{{baseUrl}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"user\": \"{{user2}}\",\r\n    \"pwd\": \"{{pwd2}}\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/register",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user #2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login user #1\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set(\"token2\", jsonData.token);\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Host",
						"value": "{{baseUrl}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"user\": \"{{user2}}\",\r\n    \"pwd\": \"{{pwd2}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read profile user #1 via User #2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"/*\r",
							"pm.test(\"Read profile user #1\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(jsonData.fullName).to.eql(pm.collectionVariables.get(\"newFullName\"));\r",
							"    pm.expect(jsonData.citizenship).to.eql(pm.collectionVariables.get(\"newCitizenship\"));\r",
							"    pm.expect(jsonData.age).to.eql(pm.collectionVariables.get(\"newAge\"));\r",
							"});\r",
							"*/"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Host",
						"value": "{{baseUrl}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token2}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/user/{{user1}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"{{user1}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "arch.homework"
		},
		{
			"key": "user1",
			"value": ""
		},
		{
			"key": "pwd1",
			"value": ""
		},
		{
			"key": "token1",
			"value": "",
			"type": "string"
		},
		{
			"key": "newFullName",
			"value": ""
		},
		{
			"key": "user2",
			"value": ""
		},
		{
			"key": "pwd2",
			"value": ""
		},
		{
			"key": "token2",
			"value": ""
		}
	]
}